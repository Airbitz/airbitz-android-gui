/**
 * Copyright (c) 2014, Airbitz Inc
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms are permitted provided that 
 * the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Redistribution or use of modified source code requires the express written
 *    permission of Airbitz Inc.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies, 
 * either expressed or implied, of the Airbitz Project.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.airbitz.api;

public class tABC_AsyncBitCoinInfo {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected tABC_AsyncBitCoinInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(tABC_AsyncBitCoinInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        coreJNI.delete_tABC_AsyncBitCoinInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setPData(SWIGTYPE_p_void value) {
    coreJNI.tABC_AsyncBitCoinInfo_pData_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getPData() {
    long cPtr = coreJNI.tABC_AsyncBitCoinInfo_pData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setEventType(tABC_AsyncEventType value) {
    coreJNI.tABC_AsyncBitCoinInfo_eventType_set(swigCPtr, this, value.swigValue());
  }

  public tABC_AsyncEventType getEventType() {
    return tABC_AsyncEventType.swigToEnum(coreJNI.tABC_AsyncBitCoinInfo_eventType_get(swigCPtr, this));
  }

  public void setStatus(tABC_Error value) {
    coreJNI.tABC_AsyncBitCoinInfo_status_set(swigCPtr, this, tABC_Error.getCPtr(value), value);
  }

  public tABC_Error getStatus() {
    long cPtr = coreJNI.tABC_AsyncBitCoinInfo_status_get(swigCPtr, this);
    return (cPtr == 0) ? null : new tABC_Error(cPtr, false);
  }

  public void setSzWalletUUID(String value) {
    coreJNI.tABC_AsyncBitCoinInfo_szWalletUUID_set(swigCPtr, this, value);
  }

  public String getSzWalletUUID() {
    return coreJNI.tABC_AsyncBitCoinInfo_szWalletUUID_get(swigCPtr, this);
  }

  public void setSzTxID(String value) {
    coreJNI.tABC_AsyncBitCoinInfo_szTxID_set(swigCPtr, this, value);
  }

  public String getSzTxID() {
    return coreJNI.tABC_AsyncBitCoinInfo_szTxID_get(swigCPtr, this);
  }

  public void setSzDescription(String value) {
    coreJNI.tABC_AsyncBitCoinInfo_szDescription_set(swigCPtr, this, value);
  }

  public String getSzDescription() {
    return coreJNI.tABC_AsyncBitCoinInfo_szDescription_get(swigCPtr, this);
  }

  public tABC_AsyncBitCoinInfo() {
    this(coreJNI.new_tABC_AsyncBitCoinInfo(), true);
  }

}
