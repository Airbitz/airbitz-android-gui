/**
 * Copyright (c) 2014, Airbitz Inc
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms are permitted provided that 
 * the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Redistribution or use of modified source code requires the express written
 *    permission of Airbitz Inc.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies, 
 * either expressed or implied, of the Airbitz Project.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.airbitz.api;

public final class tABC_RequestType {
  public final static tABC_RequestType ABC_RequestType_AccountSignIn = new tABC_RequestType("ABC_RequestType_AccountSignIn", coreJNI.ABC_RequestType_AccountSignIn_get());
  public final static tABC_RequestType ABC_RequestType_CreateAccount = new tABC_RequestType("ABC_RequestType_CreateAccount", coreJNI.ABC_RequestType_CreateAccount_get());
  public final static tABC_RequestType ABC_RequestType_SetAccountRecoveryQuestions = new tABC_RequestType("ABC_RequestType_SetAccountRecoveryQuestions", coreJNI.ABC_RequestType_SetAccountRecoveryQuestions_get());
  public final static tABC_RequestType ABC_RequestType_CreateWallet = new tABC_RequestType("ABC_RequestType_CreateWallet", coreJNI.ABC_RequestType_CreateWallet_get());
  public final static tABC_RequestType ABC_RequestType_ChangePassword = new tABC_RequestType("ABC_RequestType_ChangePassword", coreJNI.ABC_RequestType_ChangePassword_get());
  public final static tABC_RequestType ABC_RequestType_SendBitcoin = new tABC_RequestType("ABC_RequestType_SendBitcoin", coreJNI.ABC_RequestType_SendBitcoin_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static tABC_RequestType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + tABC_RequestType.class + " with value " + swigValue);
  }

  private tABC_RequestType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private tABC_RequestType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private tABC_RequestType(String swigName, tABC_RequestType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static tABC_RequestType[] swigValues = { ABC_RequestType_AccountSignIn, ABC_RequestType_CreateAccount, ABC_RequestType_SetAccountRecoveryQuestions, ABC_RequestType_CreateWallet, ABC_RequestType_ChangePassword, ABC_RequestType_SendBitcoin };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

